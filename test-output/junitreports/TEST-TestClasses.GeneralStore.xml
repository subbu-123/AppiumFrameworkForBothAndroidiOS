<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="IN-V776W92VTP" failures="0" tests="7" name="TestClasses.GeneralStore" time="0.574" errors="1" timestamp="2023-06-11T08:35:29 IST" skipped="6">
  <testcase classname="TestClasses.GeneralStore" name="validationOfErrorMessageOnRegisterScreen" time="0.000">
    <skipped/>
  </testcase> <!-- validationOfErrorMessageOnRegisterScreen -->
  <system-out/>
  <testcase classname="TestClasses.GeneralStore" name="validationOfErrorMessageOnRegisterScreen" time="0.000">
    <skipped/>
  </testcase> <!-- validationOfErrorMessageOnRegisterScreen -->
  <system-out/>
  <testcase classname="TestClasses.GeneralStore" name="startAppiumServer" time="0.574">
    <error message="The main Appium script does not exist at &#039;/opt/homebrew/lib/node_modules/appium/build/lib/main.js&#039;" type="io.appium.java_client.service.local.InvalidServerInstanceException">
      <![CDATA[io.appium.java_client.service.local.InvalidServerInstanceException: The main Appium script does not exist at '/opt/homebrew/lib/node_modules/appium/build/lib/main.js'
at io.appium.java_client.service.local.AppiumServiceBuilder.findMainScript(AppiumServiceBuilder.java:159)
at io.appium.java_client.service.local.AppiumServiceBuilder.loadPathToMainScript(AppiumServiceBuilder.java:304)
at io.appium.java_client.service.local.AppiumServiceBuilder.createArgs(AppiumServiceBuilder.java:360)
at io.appium.java_client.service.local.AppiumServiceBuilder.createArgs(AppiumServiceBuilder.java:58)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:505)
at AndroidBase.AndroidMobileBase.startAppiumServer(AndroidMobileBase.java:43)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.base/java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:69)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:361)
at org.testng.internal.invokers.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:296)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:376)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- startAppiumServer -->
  <system-out/>
  <testcase classname="TestClasses.GeneralStore" name="validateUserCompletesCheckout">
    <skipped/>
  </testcase> <!-- validateUserCompletesCheckout -->
  <system-out/>
  <testcase classname="TestClasses.GeneralStore" name="validateUserAbleToCheckout">
    <skipped/>
  </testcase> <!-- validateUserAbleToCheckout -->
  <system-out/>
  <testcase classname="TestClasses.GeneralStore" name="validateProductsAddedToCart">
    <skipped/>
  </testcase> <!-- validateProductsAddedToCart -->
  <system-out/>
  <testcase classname="TestClasses.GeneralStore" name="validateSuccesfulRegistration">
    <skipped/>
  </testcase> <!-- validateSuccesfulRegistration -->
  <system-out/>
</testsuite> <!-- TestClasses.GeneralStore -->
